{"version":1,"strings":[
{"hash":22325042,"name":"pasresolveeval.sidentifiernotfound","sourcebytes":[105,100,101,110,116,105,102,105,101,114,32,110,111,116,32,102,111,117,110,100,32,34,37,115,34],"value":"identifier not found \"%s\""},
{"hash":3076259,"name":"pasresolveeval.snotyetimplemented","sourcebytes":[110,111,116,32,121,101,116,32,105,109,112,108,101,109,101,110,116,101,100,58,32,37,115],"value":"not yet implemented: %s"},
{"hash":217076738,"name":"pasresolveeval.sillegalqualifier","sourcebytes":[105,108,108,101,103,97,108,32,113,117,97,108,105,102,105,101,114,32,34,37,115,34],"value":"illegal qualifier \"%s\""},
{"hash":234371460,"name":"pasresolveeval.ssyntaxerrorexpectedbutfound","sourcebytes":[83,121,110,116,97,120,32,101,114,114,111,114,44,32,34,37,115,34,32,101,120,112,101,99,116,101,100,32,98,117,116,32,34,37,115,34,32,102,111,117,110,100],"value":"Syntax error, \"%s\" expected but \"%s\" found"},
{"hash":152711490,"name":"pasresolveeval.swrongnumberofparametersforcallto","sourcebytes":[87,114,111,110,103,32,110,117,109,98,101,114,32,111,102,32,112,97,114,97,109,101,116,101,114,115,32,115,112,101,99,105,102,105,101,100,32,102,111,114,32,99,97,108,108,32,116,111,32,34,37,115,34],"value":"Wrong number of parameters specified for call to \"%s\""},
{"hash":156901330,"name":"pasresolveeval.sincompatibletypeargno","sourcebytes":[73,110,99,111,109,112,97,116,105,98,108,101,32,116,121,112,101,32,97,114,103,32,110,111,46,32,37,115,58,32,71,111,116,32,34,37,115,34,44,32,101,120,112,101,99,116,101,100,32,34,37,115,34],"value":"Incompatible type arg no. %s: Got \"%s\", expected \"%s\""},
{"hash":23885646,"name":"pasresolveeval.sincompatibletypeargnovarparammustmatchexactly","sourcebytes":[73,110,99,111,109,112,97,116,105,98,108,101,32,116,121,112,101,32,97,114,103,32,110,111,46,32,37,115,58,32,71,111,116,32,34,37,115,34,44,32,101,120,112,101,99,116,101,100,32,34,37,115,34,46,32,86,97,114,32,112,97,114,97,109,32,109,117,115,116,32,109,97,116,99,104,32,101,120,97,99,116,108,121,46],"value":"Incompatible type arg no. %s: Got \"%s\", expected \"%s\". Var param must match exactly."},
{"hash":54614372,"name":"pasresolveeval.svariableidentifierexpected","sourcebytes":[86,97,114,105,97,98,108,101,32,105,100,101,110,116,105,102,105,101,114,32,101,120,112,101,99,116,101,100],"value":"Variable identifier expected"},
{"hash":17863187,"name":"pasresolveeval.sduplicateidentifier","sourcebytes":[68,117,112,108,105,99,97,116,101,32,105,100,101,110,116,105,102,105,101,114,32,34,37,115,34,32,97,116,32,37,115],"value":"Duplicate identifier \"%s\" at %s"},
{"hash":67989796,"name":"pasresolveeval.sxexpectedbutyfound","sourcebytes":[37,115,32,101,120,112,101,99,116,101,100,44,32,98,117,116,32,37,115,32,102,111,117,110,100],"value":"%s expected, but %s found"},
{"hash":165139316,"name":"pasresolveeval.sancestorcycledetected","sourcebytes":[65,110,99,101,115,116,111,114,32,99,121,99,108,101,32,100,101,116,101,99,116,101,100],"value":"Ancestor cycle detected"},
{"hash":145579682,"name":"pasresolveeval.scantuseforwarddeclarationasancestor","sourcebytes":[67,97,110,39,116,32,117,115,101,32,102,111,114,119,97,114,100,32,100,101,99,108,97,114,97,116,105,111,110,32,34,37,115,34,32,97,115,32,97,110,99,101,115,116,111,114],"value":"Can't use forward declaration \"%s\" as ancestor"},
{"hash":115752844,"name":"pasresolveeval.scantdeterminewhichoverloadedfunctiontocall","sourcebytes":[67,97,110,39,116,32,100,101,116,101,114,109,105,110,101,32,119,104,105,99,104,32,111,118,101,114,108,111,97,100,101,100,32,102,117,110,99,116,105,111,110,32,116,111,32,99,97,108,108],"value":"Can't determine which overloaded function to call"},
{"hash":139613186,"name":"pasresolveeval.sforwardtypenotresolved","sourcebytes":[70,111,114,119,97,114,100,32,116,121,112,101,32,110,111,116,32,114,101,115,111,108,118,101,100,32,34,37,115,34],"value":"Forward type not resolved \"%s\""},
{"hash":190045618,"name":"pasresolveeval.sforwardprocnotresolved","sourcebytes":[70,111,114,119,97,114,100,32,37,115,32,110,111,116,32,114,101,115,111,108,118,101,100,32,34,37,115,34],"value":"Forward %s not resolved \"%s\""},
{"hash":27688755,"name":"pasresolveeval.sinvalidxmodifiery","sourcebytes":[73,110,118,97,108,105,100,32,37,115,32,109,111,100,105,102,105,101,114,32,37,115],"value":"Invalid %s modifier %s"},
{"hash":195095054,"name":"pasresolveeval.sabstractmethodsmustnothaveimplementation","sourcebytes":[65,98,115,116,114,97,99,116,32,109,101,116,104,111,100,32,109,117,115,116,32,110,111,116,32,104,97,118,101,32,97,110,32,105,109,112,108,101,109,101,110,116,97,116,105,111,110,46],"value":"Abstract method must not have an implementation."},
{"hash":17973512,"name":"pasresolveeval.scallingconventionmismatch","sourcebytes":[67,97,108,108,105,110,103,32,99,111,110,118,101,110,116,105,111,110,32,109,105,115,109,97,116,99,104],"value":"Calling convention mismatch"},
{"hash":193483075,"name":"pasresolveeval.sresulttypemismatchexpectedbutfound","sourcebytes":[82,101,115,117,108,116,32,116,121,112,101,32,109,105,115,109,97,116,99,104,44,32,101,120,112,101,99,116,101,100,32,37,115,44,32,98,117,116,32,102,111,117,110,100,32,37,115],"value":"Result type mismatch, expected %s, but found %s"},
{"hash":127599059,"name":"pasresolveeval.sfunctionheadermismatchforwardvarname","sourcebytes":[102,117,110,99,116,105,111,110,32,104,101,97,100,101,114,32,34,37,115,34,32,100,111,101,115,110,39,116,32,109,97,116,99,104,32,102,111,114,119,97,114,100,32,58,32,118,97,114,32,110,97,109,101,32,99,104,97,110,103,101,115,32,37,115,32,61,62,32,37,115],"value":"function header \"%s\" doesn't match forward : var name changes %s => %s"},
{"hash":158193157,"name":"pasresolveeval.sfunctionhidesidentifier","sourcebytes":[102,117,110,99,116,105,111,110,32,104,105,100,101,115,32,105,100,101,110,116,105,102,105,101,114,32,97,116,32,34,37,115,34,46,32,85,115,101,32,111,118,101,114,108,111,97,100,32,111,114,32,114,101,105,110,116,114,111,100,117,99,101],"value":"function hides identifier at \"%s\". Use overload or reintroduce"},
{"hash":237595890,"name":"pasresolveeval.snomethodinancestortooverride","sourcebytes":[84,104,101,114,101,32,105,115,32,110,111,32,109,101,116,104,111,100,32,105,110,32,97,110,32,97,110,99,101,115,116,111,114,32,99,108,97,115,115,32,116,111,32,98,101,32,111,118,101,114,114,105,100,100,101,110,32,34,37,115,34],"value":"There is no method in an ancestor class to be overridden \"%s\""},
{"hash":60937283,"name":"pasresolveeval.sinheritedonlyworksinmethods","sourcebytes":[73,110,104,101,114,105,116,101,100,32,119,111,114,107,115,32,111,110,108,121,32,105,110,32,109,101,116,104,111,100,115],"value":"Inherited works only in methods"},
{"hash":155676194,"name":"pasresolveeval.sinheritedneedsancestor","sourcebytes":[105,110,104,101,114,105,116,101,100,32,110,101,101,100,115,32,97,110,32,97,110,99,101,115,116,111,114],"value":"inherited needs an ancestor"},
{"hash":147992133,"name":"pasresolveeval.snopropertyfoundtooverride","sourcebytes":[78,111,32,112,114,111,112,101,114,116,121,32,102,111,117,110,100,32,116,111,32,111,118,101,114,114,105,100,101],"value":"No property found to override"},
{"hash":71662227,"name":"pasresolveeval.sexprtypemustbeclassorrecordtypegot","sourcebytes":[69,120,112,114,101,115,115,105,111,110,32,116,121,112,101,32,109,117,115,116,32,98,101,32,99,108,97,115,115,32,111,114,32,114,101,99,111,114,100,32,116,121,112,101,44,32,103,111,116,32,37,115],"value":"Expression type must be class or record type, got %s"},
{"hash":118618361,"name":"pasresolveeval.spropertynotwritable","sourcebytes":[78,111,32,109,101,109,98,101,114,32,105,115,32,112,114,111,118,105,100,101,100,32,116,111,32,97,99,99,101,115,115,32,112,114,111,112,101,114,116,121],"value":"No member is provided to access property"},
{"hash":132660562,"name":"pasresolveeval.sincompatibletypesgotexpected","sourcebytes":[73,110,99,111,109,112,97,116,105,98,108,101,32,116,121,112,101,115,58,32,103,111,116,32,34,37,115,34,32,101,120,112,101,99,116,101,100,32,34,37,115,34],"value":"Incompatible types: got \"%s\" expected \"%s\""},
{"hash":220456754,"name":"pasresolveeval.stypesarenotrelatedxy","sourcebytes":[84,121,112,101,115,32,97,114,101,32,110,111,116,32,114,101,108,97,116,101,100,58,32,34,37,115,34,32,97,110,100,32,34,37,115,34],"value":"Types are not related: \"%s\" and \"%s\""},
{"hash":90742729,"name":"pasresolveeval.sabstractmethodscannotbecalleddirectly","sourcebytes":[65,98,115,116,114,97,99,116,32,109,101,116,104,111,100,115,32,99,97,110,110,111,116,32,98,101,32,99,97,108,108,101,100,32,100,105,114,101,99,116,108,121],"value":"Abstract methods cannot be called directly"},
{"hash":191808803,"name":"pasresolveeval.smissingparameterx","sourcebytes":[77,105,115,115,105,110,103,32,112,97,114,97,109,101,116,101,114,32,37,115],"value":"Missing parameter %s"},
{"hash":21576421,"name":"pasresolveeval.sinstancememberxinaccessible","sourcebytes":[73,110,115,116,97,110,99,101,32,109,101,109,98,101,114,32,34,37,115,34,32,105,110,97,99,99,101,115,115,105,98,108,101,32,104,101,114,101],"value":"Instance member \"%s\" inaccessible here"},
{"hash":5139187,"name":"pasresolveeval.sinoperatorexpectssetelementbutgot","sourcebytes":[116,104,101,32,105,110,45,111,112,101,114,97,116,111,114,32,101,120,112,101,99,116,115,32,97,32,115,101,116,32,101,108,101,109,101,110,116,44,32,98,117,116,32,103,111,116,32,37,115],"value":"the in-operator expects a set element, but got %s"},
{"hash":217778147,"name":"pasresolveeval.swrongnumberofparametersfortypecast","sourcebytes":[119,114,111,110,103,32,110,117,109,98,101,114,32,111,102,32,112,97,114,97,109,101,116,101,114,115,32,102,111,114,32,116,121,112,101,32,99,97,115,116,32,116,111,32,37,115],"value":"wrong number of parameters for type cast to %s"},
{"hash":170843762,"name":"pasresolveeval.sillegaltypeconversionto","sourcebytes":[73,108,108,101,103,97,108,32,116,121,112,101,32,99,111,110,118,101,114,115,105,111,110,58,32,34,37,115,34,32,116,111,32,34,37,115,34],"value":"Illegal type conversion: \"%s\" to \"%s\""},
{"hash":14471396,"name":"pasresolveeval.sconstantexpressionexpected","sourcebytes":[67,111,110,115,116,97,110,116,32,101,120,112,114,101,115,115,105,111,110,32,101,120,112,101,99,116,101,100],"value":"Constant expression expected"},
{"hash":134582402,"name":"pasresolveeval.sleftsideofisoperatorexpectsaclassbutgot","sourcebytes":[108,101,102,116,32,115,105,100,101,32,111,102,32,105,115,45,111,112,101,114,97,116,111,114,32,101,120,112,101,99,116,115,32,97,32,99,108,97,115,115,44,32,98,117,116,32,103,111,116,32,34,37,115,34],"value":"left side of is-operator expects a class, but got \"%s\""},
{"hash":204218533,"name":"pasresolveeval.snotreadable","sourcebytes":[110,111,116,32,114,101,97,100,97,98,108,101],"value":"not readable"},
{"hash":18983523,"name":"pasresolveeval.sclasspropertyaccessormustbestatic","sourcebytes":[99,108,97,115,115,32,112,114,111,112,101,114,116,121,32,97,99,99,101,115,115,111,114,32,109,117,115,116,32,98,101,32,115,116,97,116,105,99],"value":"class property accessor must be static"},
{"hash":170551731,"name":"pasresolveeval.sclasspropertyaccessormustnotbestatic","sourcebytes":[99,108,97,115,115,32,112,114,111,112,101,114,116,121,32,97,99,99,101,115,115,111,114,32,109,117,115,116,32,110,111,116,32,98,101,32,115,116,97,116,105,99],"value":"class property accessor must not be static"},
{"hash":129655796,"name":"pasresolveeval.sonlyonedefaultpropertyisallowed","sourcebytes":[79,110,108,121,32,111,110,101,32,100,101,102,97,117,108,116,32,112,114,111,112,101,114,116,121,32,105,115,32,97,108,108,111,119,101,100],"value":"Only one default property is allowed"},
{"hash":10425465,"name":"pasresolveeval.swrongnumberofparametersforarray","sourcebytes":[87,114,111,110,103,32,110,117,109,98,101,114,32,111,102,32,112,97,114,97,109,101,116,101,114,115,32,102,111,114,32,97,114,114,97,121],"value":"Wrong number of parameters for array"},
{"hash":26881875,"name":"pasresolveeval.scantassignvaluestoanaddress","sourcebytes":[67,97,110,39,116,32,97,115,115,105,103,110,32,118,97,108,117,101,115,32,116,111,32,97,110,32,97,100,100,114,101,115,115],"value":"Can't assign values to an address"},
{"hash":170884350,"name":"pasresolveeval.sillegalexpression","sourcebytes":[73,108,108,101,103,97,108,32,101,120,112,114,101,115,115,105,111,110],"value":"Illegal expression"},
{"hash":256908563,"name":"pasresolveeval.scantaccessxmember","sourcebytes":[67,97,110,39,116,32,97,99,99,101,115,115,32,37,115,32,109,101,109,98,101,114,32,37,115],"value":"Can't access %s member %s"},
{"hash":248331696,"name":"pasresolveeval.smustbeinsidealoop","sourcebytes":[37,115,32,109,117,115,116,32,98,101,32,105,110,115,105,100,101,32,97,32,108,111,111,112],"value":"%s must be inside a loop"},
{"hash":141957139,"name":"pasresolveeval.sexpectxarrayelementsbutfoundy","sourcebytes":[69,120,112,101,99,116,32,37,115,32,97,114,114,97,121,32,101,108,101,109,101,110,116,115,44,32,98,117,116,32,102,111,117,110,100,32,37,115],"value":"Expect %s array elements, but found %s"},
{"hash":83203202,"name":"pasresolveeval.scannotcreateadescendantofthesealedxy","sourcebytes":[67,97,110,110,111,116,32,99,114,101,97,116,101,32,97,32,100,101,115,99,101,110,100,97,110,116,32,111,102,32,116,104,101,32,115,101,97,108,101,100,32,37,115,32,34,37,115,34],"value":"Cannot create a descendant of the sealed %s \"%s\""},
{"hash":240167276,"name":"pasresolveeval.sancestorisnotexternal","sourcebytes":[65,110,99,101,115,116,111,114,32,34,37,115,34,32,105,115,32,110,111,116,32,101,120,116,101,114,110,97,108],"value":"Ancestor \"%s\" is not external"},
{"hash":169696546,"name":"pasresolveeval.spropertymusthavereadorwrite","sourcebytes":[80,114,111,112,101,114,116,121,32,109,117,115,116,32,104,97,118,101,32,114,101,97,100,32,111,114,32,119,114,105,116,101,32,97,99,99,101,115,115,111,114],"value":"Property must have read or write accessor"},
{"hash":151245929,"name":"pasresolveeval.svirtualmethodxhaslowervisibility","sourcebytes":[86,105,114,116,117,97,108,32,109,101,116,104,111,100,32,34,37,115,34,32,104,97,115,32,97,32,108,111,119,101,114,32,118,105,115,105,98,105,108,105,116,121,32,40,37,115,41,32,116,104,97,110,32,112,97,114,101,110,116,32,99,108,97,115,115,32,37,115,32,40,37,115,41],"value":"Virtual method \"%s\" has a lower visibility (%s) than parent class %s (%s)"},
{"hash":187570803,"name":"pasresolveeval.sexternalclassinstancecannotaccessstaticx","sourcebytes":[69,120,116,101,114,110,97,108,32,99,108,97,115,115,32,105,110,115,116,97,110,99,101,32,99,97,110,110,111,116,32,97,99,99,101,115,115,32,115,116,97,116,105,99,32,37,115],"value":"External class instance cannot access static %s"},
{"hash":132006456,"name":"pasresolveeval.sxmodifiermismatchy","sourcebytes":[37,115,32,109,111,100,105,102,105,101,114,32,34,37,115,34,32,109,105,115,109,97,116,99,104],"value":"%s modifier \"%s\" mismatch"},
{"hash":151635124,"name":"pasresolveeval.ssymbolcannotbepublished","sourcebytes":[83,121,109,98,111,108,32,99,97,110,110,111,116,32,98,101,32,112,117,98,108,105,115,104,101,100],"value":"Symbol cannot be published"},
{"hash":124817205,"name":"pasresolveeval.scannottypecastatype","sourcebytes":[67,97,110,110,111,116,32,116,121,112,101,32,99,97,115,116,32,97,32,116,121,112,101],"value":"Cannot type cast a type"},
{"hash":167498212,"name":"pasresolveeval.stypeidentifierexpected","sourcebytes":[84,121,112,101,32,105,100,101,110,116,105,102,105,101,114,32,101,120,112,101,99,116,101,100],"value":"Type identifier expected"},
{"hash":132483523,"name":"pasresolveeval.scannotnestanonymousx","sourcebytes":[67,97,110,110,111,116,32,110,101,115,116,32,97,110,111,110,121,109,111,117,115,32,37,115],"value":"Cannot nest anonymous %s"},
{"hash":171841171,"name":"pasresolveeval.sfoundcallcandidatex","sourcebytes":[70,111,117,110,100,32,99,97,108,108,32,99,97,110,100,105,100,97,116,101,32,37,115],"value":"Found call candidate %s"},
{"hash":198639426,"name":"pasresolveeval.stextafterfinalignored","sourcebytes":[84,101,120,116,32,97,102,116,101,114,32,102,105,110,97,108,32,39,101,110,100,46,39,46,32,105,103,110,111,114,101,100,32,98,121,32,99,111,109,112,105,108,101,114],"value":"Text after final 'end.'. ignored by compiler"},
{"hash":118618361,"name":"pasresolveeval.snomemberisprovidedtoaccessproperty","sourcebytes":[78,111,32,109,101,109,98,101,114,32,105,115,32,112,114,111,118,105,100,101,100,32,116,111,32,97,99,99,101,115,115,32,112,114,111,112,101,114,116,121],"value":"No member is provided to access property"},
{"hash":174064004,"name":"pasresolveeval.stheuseofxisnotallowedinarecord","sourcebytes":[84,104,101,32,117,115,101,32,111,102,32,34,37,115,34,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,97,32,114,101,99,111,114,100],"value":"The use of \"%s\" is not allowed in a record"},
{"hash":81082115,"name":"pasresolveeval.sparameterlessconstructorsnotallowedinrecords","sourcebytes":[80,97,114,97,109,101,116,101,114,108,101,115,115,32,99,111,110,115,116,114,117,99,116,111,114,115,32,97,114,101,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,114,101,99,111,114,100,115,32,111,114,32,114,101,99,111,114,100,47,116,121,112,101,32,104,101,108,112,101,114,115],"value":"Parameterless constructors are not allowed in records or record\/type helpers"},
{"hash":12320403,"name":"pasresolveeval.smultiplexintypeynamezcaandb","sourcebytes":[77,117,108,116,105,112,108,101,32,37,115,32,105,110,32,37,115,32,37,115,58,32,37,115,32,97,110,100,32,37,115],"value":"Multiple %s in %s %s: %s and %s"},
{"hash":58405603,"name":"pasresolveeval.sxcannothaveparameters","sourcebytes":[37,115,32,99,97,110,110,111,116,32,104,97,118,101,32,112,97,114,97,109,101,116,101,114,115],"value":"%s cannot have parameters"},
{"hash":202241957,"name":"pasresolveeval.ssymbolxisnotportable","sourcebytes":[83,121,109,98,111,108,32,34,37,115,34,32,105,115,32,110,111,116,32,112,111,114,116,97,98,108,101],"value":"Symbol \"%s\" is not portable"},
{"hash":121036780,"name":"pasresolveeval.ssymbolxisexperimental","sourcebytes":[83,121,109,98,111,108,32,34,37,115,34,32,105,115,32,101,120,112,101,114,105,109,101,110,116,97,108],"value":"Symbol \"%s\" is experimental"},
{"hash":80063204,"name":"pasresolveeval.ssymbolxisnotimplemented","sourcebytes":[83,121,109,98,111,108,32,34,37,115,34,32,105,115,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100],"value":"Symbol \"%s\" is not implemented"},
{"hash":94550201,"name":"pasresolveeval.ssymbolxbelongstoalibrary","sourcebytes":[83,121,109,98,111,108,32,34,37,115,34,32,98,101,108,111,110,103,115,32,116,111,32,97,32,108,105,98,114,97,114,121],"value":"Symbol \"%s\" belongs to a library"},
{"hash":27322148,"name":"pasresolveeval.ssymbolxisdeprecated","sourcebytes":[83,121,109,98,111,108,32,34,37,115,34,32,105,115,32,100,101,112,114,101,99,97,116,101,100],"value":"Symbol \"%s\" is deprecated"},
{"hash":119956003,"name":"pasresolveeval.ssymbolxisdeprecatedy","sourcebytes":[83,121,109,98,111,108,32,34,37,115,34,32,105,115,32,100,101,112,114,101,99,97,116,101,100,58,32,37,115],"value":"Symbol \"%s\" is deprecated: %s"},
{"hash":173930530,"name":"pasresolveeval.srangecheckerror","sourcebytes":[82,97,110,103,101,32,99,104,101,99,107,32,101,114,114,111,114],"value":"Range check error"},
{"hash":85630132,"name":"pasresolveeval.shighrangelimitltlowrangelimit","sourcebytes":[72,105,103,104,32,114,97,110,103,101,32,108,105,109,105,116,32,60,32,108,111,119,32,114,97,110,103,101,32,108,105,109,105,116],"value":"High range limit < low range limit"},
{"hash":139823801,"name":"pasresolveeval.srangecheckevaluatingconstantsvminmax","sourcebytes":[114,97,110,103,101,32,99,104,101,99,107,32,101,114,114,111,114,32,119,104,105,108,101,32,101,118,97,108,117,97,116,105,110,103,32,99,111,110,115,116,97,110,116,115,32,40,37,115,32,105,115,32,110,111,116,32,98,101,116,119,101,101,110,32,37,115,32,97,110,100,32,37,115,41],"value":"range check error while evaluating constants (%s is not between %s and %s)"},
{"hash":95023506,"name":"pasresolveeval.sillegalchar","sourcebytes":[73,108,108,101,103,97,108,32,99,104,97,114,97,99,116,101,114],"value":"Illegal character"},
{"hash":148870526,"name":"pasresolveeval.soverflowinarithmeticoperation","sourcebytes":[79,118,101,114,102,108,111,119,32,105,110,32,97,114,105,116,104,109,101,116,105,99,32,111,112,101,114,97,116,105,111,110],"value":"Overflow in arithmetic operation"},
{"hash":153943103,"name":"pasresolveeval.sdivbyzero","sourcebytes":[68,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111],"value":"Division by zero"},
{"hash":64573908,"name":"pasresolveeval.srangecheckinsetconstructor","sourcebytes":[114,97,110,103,101,32,99,104,101,99,107,32,101,114,114,111,114,32,105,110,32,115,101,116,32,99,111,110,115,116,114,117,99,116,111,114,32,111,114,32,100,117,112,108,105,99,97,116,101,32,115,101,116,32,101,108,101,109,101,110,116],"value":"range check error in set constructor or duplicate set element"},
{"hash":48502419,"name":"pasresolveeval.sincompatibletypesgotparametersexpected","sourcebytes":[73,110,99,111,109,112,97,116,105,98,108,101,32,116,121,112,101,115,44,32,103,111,116,32,37,115,32,112,97,114,97,109,101,116,101,114,115,44,32,101,120,112,101,99,116,101,100,32,37,115],"value":"Incompatible types, got %s parameters, expected %s"},
{"hash":158517714,"name":"pasresolveeval.saddingindexspecifierrequiresnewx","sourcebytes":[97,100,100,105,110,103,32,105,110,100,101,120,32,115,112,101,99,105,102,105,101,114,32,114,101,113,117,105,114,101,115,32,110,101,119,32,34,37,115,34,32,115,112,101,99,105,102,105,101,114],"value":"adding index specifier requires new \"%s\" specifier"},
{"hash":136990834,"name":"pasresolveeval.scantfindunitx","sourcebytes":[99,97,110,39,116,32,102,105,110,100,32,117,110,105,116,32,34,37,115,34],"value":"can't find unit \"%s\""},
{"hash":41905986,"name":"pasresolveeval.scannotfindenumeratorfortype","sourcebytes":[67,97,110,110,111,116,32,102,105,110,100,32,97,110,32,101,110,117,109,101,114,97,116,111,114,32,102,111,114,32,116,104,101,32,116,121,112,101,32,34,37,115,34],"value":"Cannot find an enumerator for the type \"%s\""},
{"hash":59195557,"name":"pasresolveeval.spreviousdeclmissesoverload","sourcebytes":[80,114,101,118,105,111,117,115,32,100,101,99,108,97,114,97,116,105,111,110,32,111,102,32,34,37,115,34,32,97,116,32,37,115,32,119,97,115,32,110,111,116,32,109,97,114,107,101,100,32,119,105,116,104,32,34,111,118,101,114,108,111,97,100,34,32,100,105,114,101,99,116,105,118,101],"value":"Previous declaration of \"%s\" at %s was not marked with \"overload\" directive"},
{"hash":44004643,"name":"pasresolveeval.soverloadedprocmissesoverload","sourcebytes":[79,118,101,114,108,111,97,100,101,100,32,112,114,111,99,101,100,117,114,101,32,109,105,115,115,101,115,32,34,111,118,101,114,108,111,97,100,34,32,100,105,114,101,99,116,105,118,101,46,32,80,114,101,118,105,111,117,115,32,100,101,99,108,97,114,97,116,105,111,110,32,105,115,32,97,116,32,37,115],"value":"Overloaded procedure misses \"overload\" directive. Previous declaration is at %s"},
{"hash":137607939,"name":"pasresolveeval.smethodhidesmethodofbasetype","sourcebytes":[77,101,116,104,111,100,32,34,37,115,34,32,104,105,100,101,115,32,109,101,116,104,111,100,32,111,102,32,98,97,115,101,32,116,121,112,101,32,34,37,115,34,32,97,116,32,37,115],"value":"Method \"%s\" hides method of base type \"%s\" at %s"},
{"hash":43508882,"name":"pasresolveeval.scontextexpectedxbutfoundy","sourcebytes":[37,115,58,32,101,120,112,101,99,116,101,100,32,34,37,115,34,44,32,98,117,116,32,102,111,117,110,100,32,34,37,115,34],"value":"%s: expected \"%s\", but found \"%s\""},
{"hash":48784835,"name":"pasresolveeval.scontextxinvalidy","sourcebytes":[37,115,58,32,105,110,118,97,108,105,100,32,37,115],"value":"%s: invalid %s"},
{"hash":203955540,"name":"pasresolveeval.sidentifierxisnotaninstancefield","sourcebytes":[73,100,101,110,116,105,102,105,101,114,32,34,37,115,34,32,105,115,32,110,111,116,32,97,110,32,105,110,115,116,97,110,99,101,32,102,105,101,108,100],"value":"Identifier \"%s\" is not an instance field"},
{"hash":217136802,"name":"pasresolveeval.sconstructingclassxwithabstractmethody","sourcebytes":[67,111,110,115,116,114,117,99,116,105,110,103,32,97,32,99,108,97,115,115,32,34,37,115,34,32,119,105,116,104,32,97,98,115,116,114,97,99,116,32,109,101,116,104,111,100,32,34,37,115,34],"value":"Constructing a class \"%s\" with abstract method \"%s\""},
{"hash":241689892,"name":"pasresolveeval.sxisnotsupported","sourcebytes":[37,115,32,105,115,32,110,111,116,32,115,117,112,112,111,114,116,101,100],"value":"%s is not supported"},
{"hash":80687538,"name":"pasresolveeval.soperatorisnotoverloadedaopb","sourcebytes":[79,112,101,114,97,116,111,114,32,105,115,32,110,111,116,32,111,118,101,114,108,111,97,100,101,100,58,32,34,37,115,34,32,37,115,32,34,37,115,34],"value":"Operator is not overloaded: \"%s\" %s \"%s\""},
{"hash":214643890,"name":"pasresolveeval.sillegalqualifierafter","sourcebytes":[105,108,108,101,103,97,108,32,113,117,97,108,105,102,105,101,114,32,34,37,115,34,32,97,102,116,101,114,32,34,37,115,34],"value":"illegal qualifier \"%s\" after \"%s\""},
{"hash":144842498,"name":"pasresolveeval.sillegalqualifierinfrontof","sourcebytes":[105,108,108,101,103,97,108,32,113,117,97,108,105,102,105,101,114,32,34,37,115,34,32,105,110,32,102,114,111,110,116,32,111,102,32,34,37,115,34],"value":"illegal qualifier \"%s\" in front of \"%s\""},
{"hash":143397554,"name":"pasresolveeval.sillegalqualifierwithin","sourcebytes":[105,108,108,101,103,97,108,32,113,117,97,108,105,102,105,101,114,32,34,37,115,34,32,119,105,116,104,105,110,32,34,37,115,34],"value":"illegal qualifier \"%s\" within \"%s\""},
{"hash":100902821,"name":"pasresolveeval.sclassxnotfoundinthismodule","sourcebytes":[99,108,97,115,115,32,34,37,115,34,32,110,111,116,32,102,111,117,110,100,32,105,110,32,116,104,105,115,32,109,111,100,117,108,101],"value":"class \"%s\" not found in this module"},
{"hash":249900772,"name":"pasresolveeval.snomatchingimplforintfmethodxfound","sourcebytes":[78,111,32,109,97,116,99,104,105,110,103,32,105,109,112,108,101,109,101,110,116,97,116,105,111,110,32,102,111,114,32,105,110,116,101,114,102,97,99,101,32,109,101,116,104,111,100,32,34,37,115,34,32,102,111,117,110,100],"value":"No matching implementation for interface method \"%s\" found"},
{"hash":191637795,"name":"pasresolveeval.sclassmethodsmustbestaticinx","sourcebytes":[67,108,97,115,115,32,109,101,116,104,111,100,115,32,109,117,115,116,32,98,101,32,115,116,97,116,105,99,32,105,110,32,37,115],"value":"Class methods must be static in %s"},
{"hash":28664947,"name":"pasresolveeval.scannotmixmethodresolutionanddelegationatx","sourcebytes":[67,97,110,110,111,116,32,109,105,120,32,109,101,116,104,111,100,32,114,101,115,111,108,117,116,105,111,110,32,97,110,100,32,100,101,108,101,103,97,116,105,111,110,32,97,116,32,37,115],"value":"Cannot mix method resolution and delegation at %s"},
{"hash":178297929,"name":"pasresolveeval.simplementsdoesnotsupportarrayproperty","sourcebytes":[34,105,109,112,108,101,109,101,110,116,115,34,32,100,111,101,115,32,100,111,116,32,115,117,112,112,111,114,116,32,97,114,114,97,121,32,112,114,111,112,101,114,116,121],"value":"\"implements\" does dot support array property"},
{"hash":109069010,"name":"pasresolveeval.simplementsdoesnotsupportindex","sourcebytes":[34,105,109,112,108,101,109,101,110,116,115,34,32,100,111,101,115,32,110,111,116,32,115,117,112,112,111,114,116,32,34,105,110,100,101,120,34],"value":"\"implements\" does not support \"index\""},
{"hash":194209074,"name":"pasresolveeval.simplementsusedonunimplintf","sourcebytes":[73,109,112,108,101,109,101,110,116,115,45,112,114,111,112,101,114,116,121,32,117,115,101,100,32,111,110,32,117,110,105,109,112,108,101,109,101,110,116,101,100,32,105,110,116,101,114,102,97,99,101,58,32,34,37,34],"value":"Implements-property used on unimplemented interface: \"%\""},
{"hash":41625875,"name":"pasresolveeval.sduplicateimplementsforintf","sourcebytes":[68,117,112,108,105,99,97,116,101,32,105,109,112,108,101,109,101,110,116,115,32,102,111,114,32,105,110,116,101,114,102,97,99,101,32,34,37,115,34,32,97,116,32,37,115],"value":"Duplicate implements for interface \"%s\" at %s"},
{"hash":210599586,"name":"pasresolveeval.simplpropmusthavereadspec","sourcebytes":[73,109,112,108,101,109,101,110,116,115,45,112,114,111,112,101,114,116,121,32,109,117,115,116,32,104,97,118,101,32,114,101,97,100,32,115,112,101,99,105,102,105,101,114],"value":"Implements-property must have read specifier"},
{"hash":136104722,"name":"pasresolveeval.sdoesnotimplementinterface","sourcebytes":[34,37,115,34,32,100,111,101,115,32,110,111,116,32,105,109,112,108,101,109,101,110,116,32,105,110,116,101,114,102,97,99,101,32,34,37,115,34],"value":"\"%s\" does not implement interface \"%s\""},
{"hash":283140,"name":"pasresolveeval.stypecyclefound","sourcebytes":[84,121,112,101,32,99,121,99,108,101,32,102,111,117,110,100],"value":"Type cycle found"},
{"hash":83304884,"name":"pasresolveeval.stypexisnotyetcompletelydefined","sourcebytes":[116,121,112,101,32,34,37,115,34,32,105,115,32,110,111,116,32,121,101,116,32,99,111,109,112,108,101,116,101,108,121,32,100,101,102,105,110,101,100],"value":"type \"%s\" is not yet completely defined"},
{"hash":203566931,"name":"pasresolveeval.sduplicatecasevaluexaty","sourcebytes":[68,117,112,108,105,99,97,116,101,32,99,97,115,101,32,118,97,108,117,101,32,34,37,115,34,44,32,111,116,104,101,114,32,97,116,32,37,115],"value":"Duplicate case value \"%s\", other at %s"},
{"hash":10981170,"name":"pasresolveeval.smissingfieldsx","sourcebytes":[77,105,115,115,105,110,103,32,102,105,101,108,100,115,58,32,34,37,115,34],"value":"Missing fields: \"%s\""},
{"hash":256061285,"name":"pasresolveeval.scantassignvaluestoconstvariable","sourcebytes":[67,97,110,39,116,32,97,115,115,105,103,110,32,118,97,108,117,101,115,32,116,111,32,99,111,110,115,116,32,118,97,114,105,97,98,108,101],"value":"Can't assign values to const variable"},
{"hash":88290514,"name":"pasresolveeval.sillegalassignmenttoforloopvar","sourcebytes":[73,108,108,101,103,97,108,32,97,115,115,105,103,110,109,101,110,116,32,116,111,32,102,111,114,45,108,111,111,112,32,118,97,114,105,97,98,108,101,32,34,37,115,34],"value":"Illegal assignment to for-loop variable \"%s\""},
{"hash":108133682,"name":"pasresolveeval.stypexcannotbeextendedbyatypehelper","sourcebytes":[84,121,112,101,32,34,37,115,34,32,99,97,110,110,111,116,32,98,101,32,101,120,116,101,110,100,101,100,32,98,121,32,97,32,116,121,112,101,32,104,101,108,112,101,114],"value":"Type \"%s\" cannot be extended by a type helper"},
{"hash":262135346,"name":"pasresolveeval.stypexcannotbeextendedbyarecordhelper","sourcebytes":[84,121,112,101,32,34,37,115,34,32,99,97,110,110,111,116,32,98,101,32,101,120,116,101,110,100,101,100,32,98,121,32,97,32,114,101,99,111,114,100,32,104,101,108,112,101,114],"value":"Type \"%s\" cannot be extended by a record helper"},
{"hash":27994310,"name":"pasresolveeval.sderivedxmustextendasubclassy","sourcebytes":[68,101,114,105,118,101,100,32,37,115,32,109,117,115,116,32,101,120,116,101,110,100,32,97,32,115,117,98,99,108,97,115,115,32,111,102,32,34,37,115,34,32,111,114,32,116,104,101,32,99,108,97,115,115,32,105,116,115,101,108,102],"value":"Derived %s must extend a subclass of \"%s\" or the class itself"},
{"hash":100900355,"name":"pasresolveeval.sdefaultpropertynotallowedinhelperforx","sourcebytes":[68,101,102,97,117,108,116,32,112,114,111,112,101,114,116,121,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,104,101,108,112,101,114,32,102,111,114,32,37,115],"value":"Default property not allowed in helper for %s"},
{"hash":70110963,"name":"pasresolveeval.shelperscannotbeusedastypes","sourcebytes":[104,101,108,112,101,114,115,32,99,97,110,110,111,116,32,98,101,32,117,115,101,100,32,97,115,32,116,121,112,101,115],"value":"helpers cannot be used as types"},
{"hash":163356514,"name":"pasresolveeval.smessagehandlersinvalidparams","sourcebytes":[77,101,115,115,97,103,101,32,104,97,110,100,108,101,114,115,32,99,97,110,32,116,97,107,101,32,111,110,108,121,32,111,110,101,32,99,97,108,108,32,98,121,32,114,101,102,46,32,112,97,114,97,109,101,116,101,114],"value":"Message handlers can take only one call by ref. parameter"},
{"hash":212376066,"name":"pasresolveeval.simplictconversionunicodetoansi","sourcebytes":[73,109,112,108,105,99,105,116,32,115,116,114,105,110,103,32,116,121,112,101,32,99,111,110,118,101,114,115,105,111,110,32,119,105,116,104,32,112,111,116,101,110,116,105,97,108,32,100,97,116,97,32,108,111,115,115,32,102,114,111,109,32,34,85,110,105,99,111,100,101,83,116,114,105,110,103,34,32,116,111,32,34,65,110,115,105,83,116,114,105,110,103,34],"value":"Implicit string type conversion with potential data loss from \"UnicodeString\" to \"AnsiString\""},
{"hash":104149778,"name":"pasresolveeval.swrongtypexinarrayconstructor","sourcebytes":[87,114,111,110,103,32,116,121,112,101,32,34,37,115,34,32,105,110,32,97,114,114,97,121,32,99,111,110,115,116,114,117,99,116,111,114],"value":"Wrong type \"%s\" in array constructor"},
{"hash":226720642,"name":"pasresolveeval.sunknowncustomattributex","sourcebytes":[85,110,107,110,111,119,110,32,99,117,115,116,111,109,32,97,116,116,114,105,98,117,116,101,32,34,37,115,34],"value":"Unknown custom attribute \"%s\""},
{"hash":114303667,"name":"pasresolveeval.sattributeignoredbecauseabstractx","sourcebytes":[97,116,116,114,105,98,117,116,101,32,105,103,110,111,114,101,100,32,98,101,99,97,117,115,101,32,97,98,115,116,114,97,99,116,32,37,115],"value":"attribute ignored because abstract %s"},
{"hash":211656738,"name":"pasresolveeval.screatinganinstanceofabstractclassy","sourcebytes":[67,114,101,97,116,105,110,103,32,97,110,32,105,110,115,116,97,110,99,101,32,111,102,32,97,98,115,116,114,97,99,116,32,99,108,97,115,115,32,34,37,115,34],"value":"Creating an instance of abstract class \"%s\""},
{"hash":175949379,"name":"pasresolveeval.sillegalexpressionafterx","sourcebytes":[105,108,108,101,103,97,108,32,101,120,112,114,101,115,115,105,111,110,32,97,102,116,101,114,32,37,115],"value":"illegal expression after %s"},
{"hash":33193493,"name":"pasresolveeval.smethodhidesnonvirtualmethodexactly","sourcebytes":[109,101,116,104,111,100,32,104,105,100,101,115,32,105,100,101,110,116,105,102,105,101,114,32,97,116,32,34,37,115,34,46,32,85,115,101,32,114,101,105,110,116,114,111,100,117,99,101],"value":"method hides identifier at \"%s\". Use reintroduce"},
{"hash":189342419,"name":"pasresolveeval.sduplicatepublishedmethodxaty","sourcebytes":[68,117,112,108,105,99,97,116,101,32,112,117,98,108,105,115,104,101,100,32,109,101,116,104,111,100,32,34,37,115,34,32,97,116,32,37,115],"value":"Duplicate published method \"%s\" at %s"},
{"hash":122028005,"name":"pasresolveeval.sconstraintxspecifiedmorethanonce","sourcebytes":[67,111,110,115,116,114,97,105,110,116,32,34,37,115,34,32,115,112,101,99,105,102,105,101,100,32,109,111,114,101,32,116,104,97,110,32,111,110,99,101],"value":"Constraint \"%s\" specified more than once"},
{"hash":215081394,"name":"pasresolveeval.sconstraintxandconstraintycannotbetogether","sourcebytes":[34,37,115,34,32,99,111,110,115,116,114,97,105,110,116,32,97,110,100,32,34,37,115,34,32,99,111,110,115,116,114,97,105,110,116,32,99,97,110,110,111,116,32,98,101,32,115,112,101,99,105,102,105,101,100,32,116,111,103,101,116,104,101,114],"value":"\"%s\" constraint and \"%s\" constraint cannot be specified together"},
{"hash":32701492,"name":"pasresolveeval.sxisnotavalidconstraint","sourcebytes":[34,37,115,34,32,105,115,32,110,111,116,32,97,32,118,97,108,105,100,32,99,111,110,115,116,114,97,105,110,116],"value":"\"%s\" is not a valid constraint"},
{"hash":65467971,"name":"pasresolveeval.swrongnumberofparametersforgenericx","sourcebytes":[119,114,111,110,103,32,110,117,109,98,101,114,32,111,102,32,112,97,114,97,109,101,116,101,114,115,32,102,111,114,32,103,101,110,101,114,105,99,32,37,115],"value":"wrong number of parameters for generic %s"},
{"hash":249757171,"name":"pasresolveeval.sgenericswithoutspecializationastype","sourcebytes":[71,101,110,101,114,105,99,115,32,119,105,116,104,111,117,116,32,115,112,101,99,105,97,108,105,122,97,116,105,111,110,32,99,97,110,110,111,116,32,98,101,32,117,115,101,100,32,97,115,32,97,32,116,121,112,101,32,102,111,114,32,97,32,37,115],"value":"Generics without specialization cannot be used as a type for a %s"},
{"hash":16518755,"name":"pasresolveeval.sdeclofxdiffersfromprevaty","sourcebytes":[68,101,99,108,97,114,97,116,105,111,110,32,111,102,32,34,37,115,34,32,100,105,102,102,101,114,115,32,102,114,111,109,32,112,114,101,118,105,111,117,115,32,100,101,99,108,97,114,97,116,105,111,110,32,97,116,32,37,115],"value":"Declaration of \"%s\" differs from previous declaration at %s"},
{"hash":196108898,"name":"pasresolveeval.stypeparamxismissingconstrainty","sourcebytes":[84,121,112,101,32,112,97,114,97,109,101,116,101,114,32,34,37,115,34,32,105,115,32,109,105,115,115,105,110,103,32,99,111,110,115,116,114,97,105,110,116,32,34,37,115,34],"value":"Type parameter \"%s\" is missing constraint \"%s\""},
{"hash":80184946,"name":"pasresolveeval.stypeparamxisnotcompatiblewithy","sourcebytes":[84,121,112,101,32,112,97,114,97,109,101,116,101,114,32,34,37,115,34,32,105,115,32,110,111,116,32,99,111,109,112,97,116,105,98,108,101,32,119,105,116,104,32,116,121,112,101,32,34,37,115,34],"value":"Type parameter \"%s\" is not compatible with type \"%s\""},
{"hash":1883762,"name":"pasresolveeval.stypeparamxmustsupportintfy","sourcebytes":[84,121,112,101,32,112,97,114,97,109,101,116,101,114,32,34,37,115,34,32,109,117,115,116,32,115,117,112,112,111,114,116,32,105,110,116,101,114,102,97,99,101,32,34,37,115,34],"value":"Type parameter \"%s\" must support interface \"%s\""},
{"hash":120033539,"name":"pasresolveeval.stypeparamsnotallowedonx","sourcebytes":[84,121,112,101,32,112,97,114,97,109,101,116,101,114,115,32,110,111,116,32,97,108,108,111,119,101,100,32,111,110,32,37,115],"value":"Type parameters not allowed on %s"},
{"hash":219969955,"name":"pasresolveeval.sxmethodscannothavetypeparams","sourcebytes":[37,115,32,109,101,116,104,111,100,115,32,99,97,110,110,111,116,32,104,97,118,101,32,116,121,112,101,32,112,97,114,97,109,101,116,101,114,115],"value":"%s methods cannot have type parameters"},
{"hash":172781459,"name":"pasresolveeval.simplmustnotrepeatconstraints","sourcebytes":[73,109,112,108,101,109,101,110,116,97,116,105,111,110,115,32,109,117,115,116,32,110,111,116,32,114,101,112,101,97,116,32,99,111,110,115,116,114,97,105,110,116,115],"value":"Implementations must not repeat constraints"},
{"hash":119723842,"name":"pasresolveeval.scouldnotinfertypeargxformethody","sourcebytes":[67,111,117,108,100,32,110,111,116,32,105,110,102,101,114,32,103,101,110,101,114,105,99,32,116,121,112,101,32,97,114,103,117,109,101,110,116,32,34,37,115,34,32,102,111,114,32,109,101,116,104,111,100,32,34,37,115,34],"value":"Could not infer generic type argument \"%s\" for method \"%s\""},
{"hash":129640658,"name":"pasresolveeval.sinferredtypexfromdiffargsmismatchfrommethody","sourcebytes":[73,110,102,101,114,114,101,100,32,116,121,112,101,32,34,37,115,34,32,102,114,111,109,32,100,105,102,102,101,114,101,110,116,32,97,114,103,117,109,101,110,116,115,32,109,105,115,109,97,116,99,104,32,102,111,114,32,109,101,116,104,111,100,32,34,37,115,34],"value":"Inferred type \"%s\" from different arguments mismatch for method \"%s\""},
{"hash":42334163,"name":"pasresolveeval.sparamofthistypecannothavedefval","sourcebytes":[80,97,114,97,109,101,116,101,114,115,32,111,102,32,116,104,105,115,32,116,121,112,101,32,99,97,110,110,111,116,32,104,97,118,101,32,100,101,102,97,117,108,116,32,118,97,108,117,101,115],"value":"Parameters of this type cannot have default values"}
]}
